#include<bits/stdc++.h>
using namespace std;
#define endl "\n"
#define mem(a,b) memset(a,b,sizeof(a))
#define sqr(a) (a*a)
#define optimize() ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define fraction() cout.unsetf(ios::floatfield); cout.precision(10); cout.setf(ios::fixed,ios::floatfield);



const int mx=2e5+100;
int p[mx];
int a[mx];
int b[mx];

int main()
{
    optimize();
    int n;
    cin>>n;
    for(int i=1; i<=n; i++) cin>>p[i];
    for(int i=1; i<=n; i++) cin>>a[i];
    for(int i=1; i<=n; i++) cin>>b[i];


    priority_queue<int, vector<int>, greater<int>> q[5][5];


    for(int i=1; i<=n; i++)
    {
        q[a[i]][b[i]].push(p[i]);
    }


    int t;
    cin>>t;
    while(t--)
    {
        int c;
        cin>>c;
        int ans=INT_MAX;
        int f,k;

        for(int i=1; i<=3; i++)
        {
            if(!q[c][i].empty() && q[c][i].top()<ans)
            {
                ans=q[c][i].top();
                f=c;
                k=i;
            }
        }

        for(int i=1; i<=3; i++)
        {
            if(!q[i][c].empty() && q[i][c].top()<ans)
            {
                ans=q[i][c].top();
                f=i;
                k=c;
            }
        }

        if(ans==INT_MAX) ans=-1;
        else
        {
            q[f][k].pop();
        }
        cout<<ans<<" ";
    }
    cout<<endl;

    return 0;
}
